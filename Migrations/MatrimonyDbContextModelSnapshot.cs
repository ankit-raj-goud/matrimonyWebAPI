// <auto-generated />
using System;
using MatrimonyWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MatrimonyWebApi.Migrations
{
    [DbContext(typeof(MatrimonyDbContext))]
    partial class MatrimonyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MatrimonyWebApi.Models.AdminMaster", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("AdminMasters");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("dd467971-80d6-43a6-a1ab-8b64cd25dedd"),
                            Password = "admin",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.Candidate", b =>
                {
                    b.Property<Guid>("CandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CasteIdRef")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CityIdRef")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DesiredPartnerDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FamilyIncome")
                        .HasColumnType("float");

                    b.Property<string>("FamilyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderIdRef")
                        .HasColumnType("int");

                    b.Property<float>("Height")
                        .HasColumnType("real");

                    b.Property<bool>("IsContactNumberOpen")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProfilePictureOpenVisible")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PersonalMonthlyIncome")
                        .HasColumnType("float");

                    b.Property<string>("Profession")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCaste")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("CandidateId");

                    b.HasIndex("CasteIdRef");

                    b.HasIndex("CityIdRef");

                    b.HasIndex("GenderIdRef");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.CandidateLoginDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CandidateIdRef")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CandidateIdRef");

                    b.ToTable("CandidateLoginDetails");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.CandidateProfilePicture", b =>
                {
                    b.Property<int>("PictureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PictureId"));

                    b.Property<Guid>("CandidateIdRef")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PictureType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PictureId");

                    b.HasIndex("CandidateIdRef");

                    b.ToTable("CandidateProfilePictures");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.CasteMaster", b =>
                {
                    b.Property<Guid>("CasteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CasteName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReligionIdRef")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CasteId");

                    b.HasIndex("ReligionIdRef");

                    b.ToTable("CasteMasters");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.CityMaster", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateIdRef")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.HasIndex("StateIdRef");

                    b.ToTable("CityMasters");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.CountryMaster", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CountryName = "India"
                        });
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.Donation", b =>
                {
                    b.Property<int>("DonationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DonationId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("CityIdRef")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DonerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DonationId");

                    b.HasIndex("CityIdRef");

                    b.ToTable("Donations");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.GenderMaster", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"));

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenderId");

                    b.ToTable("GenderMasters");

                    b.HasData(
                        new
                        {
                            GenderId = 1,
                            Gender = "Male"
                        },
                        new
                        {
                            GenderId = 2,
                            Gender = "Female"
                        },
                        new
                        {
                            GenderId = 3,
                            Gender = "Other"
                        });
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.Interest", b =>
                {
                    b.Property<int>("InterestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterestId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InterestStatusId")
                        .HasColumnType("int");

                    b.Property<Guid>("ReceiverIdRef")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderIdRef")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InterestId");

                    b.HasIndex("InterestStatusId");

                    b.HasIndex("ReceiverIdRef");

                    b.HasIndex("SenderIdRef");

                    b.ToTable("Interests");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.InterestStatusMaster", b =>
                {
                    b.Property<int>("InterestStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterestStatusId"));

                    b.Property<string>("InterestStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InterestStatusId");

                    b.ToTable("InterestStatusMasters");

                    b.HasData(
                        new
                        {
                            InterestStatusId = 1,
                            InterestStatus = "Open"
                        },
                        new
                        {
                            InterestStatusId = 2,
                            InterestStatus = "Accepted"
                        },
                        new
                        {
                            InterestStatusId = 3,
                            InterestStatus = "Rejected"
                        });
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.MaritialStatusMaster", b =>
                {
                    b.Property<int>("MaritialStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaritialStatusId"));

                    b.Property<string>("MaritialStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaritialStatusId");

                    b.ToTable("MaritialStatusMasters");

                    b.HasData(
                        new
                        {
                            MaritialStatusId = 1,
                            MaritialStatus = "Unmarried"
                        },
                        new
                        {
                            MaritialStatusId = 2,
                            MaritialStatus = "Widow"
                        },
                        new
                        {
                            MaritialStatusId = 3,
                            MaritialStatus = "Divorced"
                        });
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<Guid>("CandidateIdRef")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("NotificationId");

                    b.HasIndex("CandidateIdRef");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.ReligionMaster", b =>
                {
                    b.Property<Guid>("ReligionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReligionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReligionId");

                    b.ToTable("ReligionMasters");

                    b.HasData(
                        new
                        {
                            ReligionId = new Guid("08c6ab3b-97df-4959-8390-e676d35b8ceb"),
                            ReligionName = "Hindu"
                        });
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.StateMaster", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateId"));

                    b.Property<int>("CountryIdRef")
                        .HasColumnType("int");

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StateId");

                    b.HasIndex("CountryIdRef");

                    b.ToTable("StateMasters");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.Candidate", b =>
                {
                    b.HasOne("MatrimonyWebApi.Models.CasteMaster", "CasteMaster")
                        .WithMany("Candidates")
                        .HasForeignKey("CasteIdRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrimonyWebApi.Models.CityMaster", "CityMaster")
                        .WithMany("Candidates")
                        .HasForeignKey("CityIdRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrimonyWebApi.Models.GenderMaster", "GenderMaster")
                        .WithMany("Candidates")
                        .HasForeignKey("GenderIdRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CasteMaster");

                    b.Navigation("CityMaster");

                    b.Navigation("GenderMaster");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.CandidateLoginDetails", b =>
                {
                    b.HasOne("MatrimonyWebApi.Models.Candidate", "Candidate")
                        .WithMany("CandidateLoginDetails")
                        .HasForeignKey("CandidateIdRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.CandidateProfilePicture", b =>
                {
                    b.HasOne("MatrimonyWebApi.Models.Candidate", "Candidate")
                        .WithMany("CandidateProfilePictures")
                        .HasForeignKey("CandidateIdRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.CasteMaster", b =>
                {
                    b.HasOne("MatrimonyWebApi.Models.ReligionMaster", "ReligionMaster")
                        .WithMany("Castes")
                        .HasForeignKey("ReligionIdRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReligionMaster");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.CityMaster", b =>
                {
                    b.HasOne("MatrimonyWebApi.Models.StateMaster", "StateMaster")
                        .WithMany("Cities")
                        .HasForeignKey("StateIdRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StateMaster");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.Donation", b =>
                {
                    b.HasOne("MatrimonyWebApi.Models.CityMaster", "CityMaster")
                        .WithMany("Donations")
                        .HasForeignKey("CityIdRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CityMaster");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.Interest", b =>
                {
                    b.HasOne("MatrimonyWebApi.Models.InterestStatusMaster", "InterestStatusMaster")
                        .WithMany("Interests")
                        .HasForeignKey("InterestStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrimonyWebApi.Models.Candidate", "ReceiverCandidate")
                        .WithMany("ReceiverInterests")
                        .HasForeignKey("ReceiverIdRef")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("MatrimonyWebApi.Models.Candidate", "SenderCandidate")
                        .WithMany("SenderInterests")
                        .HasForeignKey("SenderIdRef")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("InterestStatusMaster");

                    b.Navigation("ReceiverCandidate");

                    b.Navigation("SenderCandidate");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.Notification", b =>
                {
                    b.HasOne("MatrimonyWebApi.Models.Candidate", "Candidate")
                        .WithMany("Notifications")
                        .HasForeignKey("CandidateIdRef");

                    b.Navigation("Candidate");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.StateMaster", b =>
                {
                    b.HasOne("MatrimonyWebApi.Models.CountryMaster", "Country")
                        .WithMany("States")
                        .HasForeignKey("CountryIdRef")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.Candidate", b =>
                {
                    b.Navigation("CandidateLoginDetails");

                    b.Navigation("CandidateProfilePictures");

                    b.Navigation("Notifications");

                    b.Navigation("ReceiverInterests");

                    b.Navigation("SenderInterests");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.CasteMaster", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.CityMaster", b =>
                {
                    b.Navigation("Candidates");

                    b.Navigation("Donations");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.CountryMaster", b =>
                {
                    b.Navigation("States");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.GenderMaster", b =>
                {
                    b.Navigation("Candidates");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.InterestStatusMaster", b =>
                {
                    b.Navigation("Interests");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.ReligionMaster", b =>
                {
                    b.Navigation("Castes");
                });

            modelBuilder.Entity("MatrimonyWebApi.Models.StateMaster", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
